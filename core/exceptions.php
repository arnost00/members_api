<?php

namespace Core;

require_once __DIR__ . "/logging.php";

use Core\Logging;
use Pecee\SimpleRouter\Exceptions\HttpException;

// $content = [
//     "code" => $error->getCode(),
//     "message" => $error->getMessage(),
//     // debug
//     "method" => $_SERVER["REQUEST_METHOD"],
//     // PATH_INFO sometimes fails
//     "path" => @$_SERVER["PATH_INFO"],
//     "input" => input()->all(),
//     "auth" => request()->getHeader("authorization"),
//     "line" => $error->getLine(),
//     "file" => $error->getFile(),
//     "stacktrace" => $error->getTrace(),
// ];

class ApiCrashReport {
    public static function report(\Throwable $exception) {
        $error_code = $exception->getCode();
        $error_message = $exception->getMessage();
        
        // default is server error
        $status_code = 500;

        if ($exception instanceof ApiException || $exception instanceof HttpException) {
            // status code must be in error range 400 =.. 600
            $status_code = $error_code >= 400 && $error_code < 600 ? $error_code : $status_code;
        }

        response()->httpCode($status_code);

        $content = [
            "code" => $error_code,
            "message" => $error_message,
        ] + (request()->debug ? [
            // debug
            "method" => $_SERVER["REQUEST_METHOD"],
            "path" => $_SERVER["REQUEST_URI"],
            "input" => input()->all(),
            "line" => $exception->getLine(),
            "file" => $exception->getFile(),
            "trace" => $exception->getTrace(),
        ] : []);

        // write a log entry
        Logging::exception($content);
        
        if (request()->isFormatAccepted("application/json")) {
            response()->json($content);
        } else {
            echo "<html><header><title>" . $error_message . "</title></header><body>";
            echo "<h1><span style='color: red;'>Error: </span><i>" . $error_message . "</i></h1>";
            echo "<p>Error code: <b>" . $error_code . "</b></p>";
            echo "<p>Status code: <b>" . $status_code . "</b></p>";
            echo "<pre>" . json_encode($content, JSON_PRETTY_PRINT) . "</pre>";
            
            if (!request()->debug) {
                echo "<p>For more debugging information, use test clubs or set <code>request()->debug = true;</code>.</p>";
            }

            echo "<p>This report was generated by <code>" . static::class . "</code>.</p>";
    
            echo "</body></html>";
        }
    
        exit;
    }
}

class ApiException extends \Exception {
    public function __construct($message, $code = 500, \Throwable $previous = null)
    {
        if ($code < 400 || $code >= 600) {
            throw new \Exception("status code for exception must follow http error codes");
        }

        parent::__construct($message, $code, $previous);
    }
}